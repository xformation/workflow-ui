{
  "openapi": "3.0.0",
  "info": {
    "version": "3.1.2",
    "title": "procurment workflow managment",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/workflows": {
      "get": {
        "summary": "Get the list of workflows",
        "responses": {
          "200": {
            "description": "Response will be an array of the workflow with id",
            "headers": {
              "x-next": {
                "description": "List of workflows",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Workflow"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workflow": {
      "post": {
        "summary": "Add new Workflow",
        "operationId": "",
        "requestBody": {
          "description": "add new Workflow",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "description": "Workflow added successfully",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "add Usecase Successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "x-faker": "datatype.number({ \"min\": 10, \"max\": 100 })"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workflow/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "details about particular workflow",
        "responses": {
          "200": {
            "description": "workflow/{id} used from get workflow data by id",
            "headers": {
              "x-next": {
                "description": "Usecase detail",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/WorkflowDetail"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update a particular workflow",
        "operationId": "",
        "requestBody": {
          "description": "Update a particular workflow",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "description": "Usecase detail Added successfully",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Usecase detail Added successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "x-faker": "datatype.number({ \"min\": 10, \"max\": 100 })"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Delete the workflow by id",
            "headers": {
              "x-next": {
                "description": "Delete the workflow by id",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Workflow deleted successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/workflow/{id}/detail": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "details about all workflow usecase",
        "responses": {
          "200": {
            "description": "details about all workflow usecase",
            "headers": {
              "x-next": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/WorkflowDetail"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stage/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "details about particular workflow stage",
        "responses": {
          "200": {
            "description": "details about particular workflow stage",
            "headers": {
              "x-next": {
                "description": "Usecase detail",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/Stage"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update stage of workflow",
        "operationId": "",
        "requestBody": {
          "description": "Update stage of workflow",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Stage"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "description": "Usecase detail Added successfully",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Usecase detail Added successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Delete the stage of workflow by id",
            "headers": {
              "x-next": {
                "description": "Delete the stage of workflow by id",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Stage deleted successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stage/{id}/status": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get the status of the stage",
        "responses": {
          "200": {
            "description": "get the status of the stage",
            "headers": {
              "x-next": {
                "description": "Usecase detail",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update the status of the stage",
        "operationId": "",
        "requestBody": {
          "description": "Update the status of the stage",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Status updated successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/step/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get the details of the step by id",
        "responses": {
          "200": {
            "description": "get the details of the step by id",
            "headers": {
              "x-next": {
                "description": "Usecase detail",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/Step"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update the step of the stage by id",
        "operationId": "",
        "requestBody": {
          "description": "Update the step of the stage by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Status updated successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "delete the step by id",
            "headers": {
              "x-next": {
                "description": "delete the step by id",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Step deleted successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/step/{id}/status": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get the status of the step",
        "responses": {
          "200": {
            "description": "get the status of the step",
            "headers": {
              "x-next": {
                "description": "Usecase detail",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "object": {
                      "$ref": "#/components/schemas/Status"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update the status of the step",
        "operationId": "",
        "requestBody": {
          "description": "Update the status of the step",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "Status updated successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checklist/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Update the checklist of the stage by id",
        "operationId": "",
        "requestBody": {
          "description": "Update the checklist of the stage by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "x-next": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "format": "int64",
                      "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                    },
                    "message": {
                      "type": "string",
                      "default": "checklist updated successfully"
                    },
                    "type": {
                      "type": "string",
                      "default": "SUCCESS"
                    },
                    "object": {}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Step": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "x-faker":"{{lorem.word}}"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "x-faker": "{{internet.url}}"
          },
          "status": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
          }
        }
      },
      "Stage": {
        "type": "object",
        "properties": {
          "checkList": {
            "type": "array",
            "x-count": 5,
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                }
              }
            }
          },
          "steps": {
            "type": "array",
            "x-count": 2,
            "items": {
              "$ref": "#/components/schemas/Step"
            }
          },
          "name": {
            "type": "string",
            "x-faker": "{{lorem.word}}"
          },
          "assignedTo": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-faker": "{{lorem.word}}"
          },
          "description": {
            "type": "string"
          },
          "assignTo": {
            "type": "string"
          },
          "stages": {
            "type": "array",
            "x-count": 6,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-faker": "{{lorem.word}}"
                },
                "assignedTo": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                }
              }
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
          }
        }
      },
      "WorkflowDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-faker": "{{lorem.word}}"
          },
          "description": {
            "type": "string",
            "x-faker": "{{lorem.sentence}}"
          },
          "assignTo": {
            "type": "string"
          },
          "stages": {
            "type": "array",
            "x-count": 6,
            "items": {
              "$ref": "#/components/schemas/Stage"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ]
}